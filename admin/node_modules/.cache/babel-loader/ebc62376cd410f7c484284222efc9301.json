{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\component\\\\QuanLyNguoiDung\\\\QuanLyNguoiDung.js\";\nimport React, { Component } from \"react\";\nimport { TextField, Button } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { withAlert } from \"react-alert\";\nimport CancelPresentationOutlinedIcon from \"@mui/icons-material/CancelPresentationOutlined\";\nimport \"./QuanLyNguoiDung.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass QuanLyNguoiDung extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callFunctionHandleMessage = () => {\n      setTimeout(() => {\n        this.props.getAllUser();\n        let {\n          statusCode,\n          message\n        } = this.props.message;\n        const alert = this.props.alert;\n\n        if (statusCode === 200) {\n          alert.success(message);\n          this.setState({\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            id: \"\"\n          });\n          return;\n        }\n\n        alert.error(message);\n      }, 700);\n    };\n\n    this.handleClick = value => {\n      let {\n        id\n      } = value.row;\n      this.props.deleteUser(id);\n      this.callFunctionHandleMessage();\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createNewUser = e => {\n      e.preventDefault();\n      let {\n        id,\n        username,\n        email,\n        password\n      } = this.state;\n\n      if (!id) {\n        this.props.createNewUser({\n          username,\n          email,\n          password\n        });\n        this.callFunctionHandleMessage();\n        return;\n      }\n\n      this.props.handleUpdateUser({\n        id,\n        username,\n        email,\n        password\n      });\n      this.callFunctionHandleMessage();\n    };\n\n    this.handleUpdateUser = value => {\n      this.setState({\n        toggleForm: true\n      });\n      let {\n        id,\n        email,\n        username,\n        password\n      } = value.row;\n      console.log({\n        id,\n        email,\n        username,\n        password\n      });\n      this.setState({\n        id,\n        email,\n        username,\n        password\n      });\n    };\n\n    this.state = {\n      listUser: [],\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      toggleForm: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.listUser !== this.props.listUser) {\n      this.setState({\n        listUser: [...this.props.listUser]\n      });\n    }\n  }\n\n  render() {\n    const columns = [{\n      field: \"id\",\n      headerName: \"ID\",\n      width: 70,\n      headerAlign: \"center\"\n    }, {\n      field: \"username\",\n      headerName: \"Username\",\n      width: 200,\n      headerAlign: \"center\"\n    }, {\n      field: \"email\",\n      headerName: \"Email\",\n      width: 200,\n      headerAlign: \"center\"\n    }, {\n      field: \"password\",\n      headerName: \"Password\",\n      width: 100,\n      headerAlign: \"center\"\n    }, {\n      field: \"createdAt\",\n      headerName: \"Createday\",\n      width: 100,\n      headerAlign: \"center\",\n      type: \"text\"\n    }, {\n      field: \"button\",\n      headerName: \"Action\",\n      width: 200,\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"edit\",\n            variant: \"contained\",\n            color: \"success\",\n            onClick: () => this.handleUpdateUser(cellValues),\n            children: \"S\\u1EEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"warning\",\n            onClick: () => this.handleClick(cellValues),\n            children: \"X\\xF3a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      },\n      headerAlign: \"center\"\n    }];\n    const rows = [...this.state.listUser.reverse()];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.toggleForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(CancelPresentationOutlinedIcon, {\n          className: \"close-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"outlined-basic\",\n          label: \"User Name\",\n          variant: \"outlined\",\n          size: \"small\",\n          name: \"username\",\n          value: this.state.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"filled-basic\",\n          label: \"Email\",\n          variant: \"outlined\",\n          size: \"small\",\n          name: \"email\",\n          \"aria-controls\": true,\n          value: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"standard-basic\",\n          label: \"Pass word\",\n          variant: \"outlined\",\n          size: \"small\",\n          name: \"password\",\n          value: this.state.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.createNewUser,\n          variant: \"outlined\",\n          size: \"small\",\n          class: \"register-button\",\n          children: this.state.id ? `Update` : `Register`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"edit\",\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Add Ac\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 5,\n          checkboxSelection: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withAlert()(QuanLyNguoiDung);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/component/QuanLyNguoiDung/QuanLyNguoiDung.js"],"names":["React","Component","TextField","Button","DataGrid","withAlert","CancelPresentationOutlinedIcon","QuanLyNguoiDung","constructor","props","callFunctionHandleMessage","setTimeout","getAllUser","statusCode","message","alert","success","setState","username","email","password","id","error","handleClick","value","row","deleteUser","handleOnChange","e","target","name","createNewUser","preventDefault","state","handleUpdateUser","toggleForm","console","log","listUser","componentDidMount","componentDidUpdate","prevProps","render","columns","field","headerName","width","headerAlign","type","renderCell","cellValues","rows","reverse"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { withAlert } from \"react-alert\";\r\nimport CancelPresentationOutlinedIcon from \"@mui/icons-material/CancelPresentationOutlined\";\r\nimport \"./QuanLyNguoiDung.css\";\r\nclass QuanLyNguoiDung extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listUser: [],\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      toggleForm: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllUser();\r\n  }\r\n  callFunctionHandleMessage = () => {\r\n    setTimeout(() => {\r\n      this.props.getAllUser();\r\n      let { statusCode, message } = this.props.message;\r\n      const alert = this.props.alert;\r\n      if (statusCode === 200) {\r\n        alert.success(message);\r\n        this.setState({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          id: \"\",\r\n        });\r\n        return;\r\n      }\r\n      alert.error(message);\r\n    }, 700);\r\n  };\r\n  handleClick = (value) => {\r\n    let { id } = value.row;\r\n    this.props.deleteUser(id);\r\n    this.callFunctionHandleMessage();\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.listUser !== this.props.listUser) {\r\n      this.setState({\r\n        listUser: [...this.props.listUser],\r\n      });\r\n    }\r\n  }\r\n  handleOnChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  createNewUser = (e) => {\r\n    e.preventDefault();\r\n    let { id, username, email, password } = this.state;\r\n    if (!id) {\r\n      this.props.createNewUser({ username, email, password });\r\n      this.callFunctionHandleMessage();\r\n      return;\r\n    }\r\n    this.props.handleUpdateUser({ id, username, email, password });\r\n    this.callFunctionHandleMessage();\r\n  };\r\n  handleUpdateUser = (value) => {\r\n    this.setState({\r\n      toggleForm: true,\r\n    });\r\n    let { id, email, username, password } = value.row;\r\n    console.log({ id, email, username, password });\r\n    this.setState({\r\n      id,\r\n      email,\r\n      username,\r\n      password,\r\n    });\r\n  };\r\n  render() {\r\n    const columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70, headerAlign: \"center\" },\r\n      {\r\n        field: \"username\",\r\n        headerName: \"Username\",\r\n        width: 200,\r\n        headerAlign: \"center\",\r\n      },\r\n      {\r\n        field: \"email\",\r\n        headerName: \"Email\",\r\n        width: 200,\r\n        headerAlign: \"center\",\r\n      },\r\n      {\r\n        field: \"password\",\r\n        headerName: \"Password\",\r\n        width: 100,\r\n        headerAlign: \"center\",\r\n      },\r\n      {\r\n        field: \"createdAt\",\r\n        headerName: \"Createday\",\r\n        width: 100,\r\n        headerAlign: \"center\",\r\n        type: \"text\",\r\n      },\r\n      {\r\n        field: \"button\",\r\n        headerName: \"Action\",\r\n        width: 200,\r\n\r\n        renderCell: (cellValues) => {\r\n          return (\r\n            <>\r\n              <Button\r\n                className=\"edit\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={() => this.handleUpdateUser(cellValues)}\r\n              >\r\n                Sửa\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"warning\"\r\n                onClick={() => this.handleClick(cellValues)}\r\n              >\r\n                Xóa\r\n              </Button>\r\n            </>\r\n          );\r\n        },\r\n        headerAlign: \"center\",\r\n      },\r\n    ];\r\n\r\n    const rows = [...this.state.listUser.reverse()];\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.toggleForm ? (\r\n          <div className=\"form\">\r\n            <CancelPresentationOutlinedIcon className=\"close-button\"></CancelPresentationOutlinedIcon>\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"outlined-basic\"\r\n              label=\"User Name\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n            />\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"filled-basic\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"email\"\r\n              aria-controls\r\n              value={this.state.email}\r\n            />\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"standard-basic\"\r\n              label=\"Pass word\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n            />\r\n            <Button\r\n              onClick={this.createNewUser}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              class=\"register-button\"\r\n            >\r\n              {this.state.id ? `Update` : `Register`}\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"data\">\r\n          <Button className=\"edit\" variant=\"contained\" color=\"success\">\r\n            Add Ac\r\n          </Button>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={5}\r\n            checkboxSelection\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withAlert()(QuanLyNguoiDung);\r\n"]},"metadata":{},"sourceType":"module"}
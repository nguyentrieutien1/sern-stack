{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\component\\\\QuanLyGioHang\\\\QuanLyGioHang.js\";\nimport React, { Component } from \"react\";\nimport \"./QuanLyGioHang.css\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport PendingActionsOutlinedIcon from \"@mui/icons-material/PendingActionsOutlined\";\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\nimport SpellcheckOutlinedIcon from \"@mui/icons-material/SpellcheckOutlined\";\nimport DoNotDisturbOnTotalSilenceOutlinedIcon from \"@mui/icons-material/DoNotDisturbOnTotalSilenceOutlined\";\nimport { withAlert } from \"react-alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuanLyNguoiDung extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateOrder = id => {\n      this.props.updateOrder(id);\n      setTimeout(() => {\n        let {\n          message,\n          statusCode\n        } = this.props.message;\n        let {\n          success,\n          error\n        } = this.props.alert;\n        this.props.getAllOrders();\n\n        if (statusCode === 200) {\n          success(message);\n          return;\n        }\n\n        error(message);\n      }, 600);\n    };\n\n    this.state = {\n      listOrder: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.allOrders !== this.props.allOrders) {\n      this.setState({\n        listOrder: this.props.allOrders.orderList\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.getAllOrders();\n  }\n\n  render() {\n    const columns = [{\n      field: \"idUser\",\n      headerName: \"Id User\",\n      width: 250\n    }, {\n      field: \"img\",\n      headerName: \"Product\",\n      width: 180,\n      renderCell: params => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: params.row.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this)\n    }, {\n      field: \"price\",\n      headerName: `Price `,\n      width: 250\n    }, {\n      field: \"createdAt\",\n      width: 180\n    }, {\n      field: \"quantity\",\n      width: 180\n    }, {\n      field: \"status\",\n      width: 180,\n      renderCell: params => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => this.updateOrder(params.row.id) // className={params.row.active ? `active` : `un_active`}\n        ,\n        className: \"\",\n        children: params.row.active ? `Process` : `Pending`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) // (params.row.image ? \"1\" : \"2\")\n\n    }];\n    const rows = [...this.state.listOrder.reverse()];\n    const listPedding = this.state.listOrder.filter(list => !list.active);\n    const process = this.state.listOrder.filter(list => list.active);\n    let total = 0;\n    process.forEach(e => {\n      total += parseFloat(e.quantity) + parseFloat(e.price);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container__order\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders__management\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order order-pending\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Order Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-pending-icon\",\n            children: /*#__PURE__*/_jsxDEV(PendingActionsOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: listPedding.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order order-cancel\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Order Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-pending-icon\",\n            children: /*#__PURE__*/_jsxDEV(CancelOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order order-process\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Order Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-pending-icon\",\n            children: /*#__PURE__*/_jsxDEV(SpellcheckOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: process.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order order-total\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Order Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-pending-icon\",\n            children: /*#__PURE__*/_jsxDEV(DoNotDisturbOnTotalSilenceOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: [\" $ \", total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container__order--list\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          pageSize: 9,\n          rows: rows,\n          columns: columns,\n          checkboxSelection: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withAlert()(QuanLyNguoiDung);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/component/QuanLyGioHang/QuanLyGioHang.js"],"names":["React","Component","DataGrid","PendingActionsOutlinedIcon","CancelOutlinedIcon","SpellcheckOutlinedIcon","DoNotDisturbOnTotalSilenceOutlinedIcon","withAlert","QuanLyNguoiDung","constructor","props","updateOrder","id","setTimeout","message","statusCode","success","error","alert","getAllOrders","state","listOrder","componentDidUpdate","prevProps","allOrders","setState","orderList","componentDidMount","render","columns","field","headerName","width","renderCell","params","row","image","active","rows","reverse","listPedding","filter","list","process","total","forEach","e","parseFloat","quantity","price","length","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./QuanLyGioHang.css\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport PendingActionsOutlinedIcon from \"@mui/icons-material/PendingActionsOutlined\";\r\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\r\nimport SpellcheckOutlinedIcon from \"@mui/icons-material/SpellcheckOutlined\";\r\nimport DoNotDisturbOnTotalSilenceOutlinedIcon from \"@mui/icons-material/DoNotDisturbOnTotalSilenceOutlined\";\r\nimport { withAlert } from \"react-alert\";\r\nclass QuanLyNguoiDung extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOrder: [],\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.allOrders !== this.props.allOrders) {\r\n      this.setState({\r\n        listOrder: this.props.allOrders.orderList,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllOrders();\r\n  }\r\n  updateOrder = (id) => {\r\n    this.props.updateOrder(id);\r\n    setTimeout(() => {\r\n      let { message, statusCode } = this.props.message;\r\n      let { success, error } = this.props.alert;\r\n      this.props.getAllOrders();\r\n      if (statusCode === 200) {\r\n        success(message);\r\n        return;\r\n      }\r\n      error(message);\r\n    }, 600);\r\n  };\r\n  render() {\r\n    const columns = [\r\n      {\r\n        field: \"idUser\",\r\n        headerName: \"Id User\",\r\n        width: 250,\r\n      },\r\n      {\r\n        field: \"img\",\r\n        headerName: \"Product\",\r\n        width: 180,\r\n        renderCell: (params) => <img src={params.row.image}></img>,\r\n      },\r\n      {\r\n        field: \"price\",\r\n        headerName: `Price `,\r\n        width: 250,\r\n      },\r\n\r\n      { field: \"createdAt\", width: 180 },\r\n      { field: \"quantity\", width: 180 },\r\n      {\r\n        field: \"status\",\r\n        width: 180,\r\n        renderCell: (params) => (\r\n          <p\r\n            onClick={() => this.updateOrder(params.row.id)}\r\n            // className={params.row.active ? `active` : `un_active`}\r\n          className=\"\"\r\n          >\r\n            {params.row.active ? `Process` : `Pending`}\r\n          </p>\r\n        ),\r\n        // (params.row.image ? \"1\" : \"2\")\r\n      },\r\n    ];\r\n\r\n    const rows = [...this.state.listOrder.reverse()];\r\n    const listPedding = this.state.listOrder.filter((list) => !list.active);\r\n    const process = this.state.listOrder.filter((list) => list.active);\r\n    let total = 0;\r\n    process.forEach((e) => {\r\n      total += parseFloat(e.quantity) + parseFloat(e.price);\r\n    });\r\n    return (\r\n      <div className=\"container__order\">\r\n        <div className=\"orders__management\">\r\n          <div className=\"order order-pending\">\r\n            <span>Order Pending</span>\r\n            <div className=\"order-pending-icon\">\r\n              <PendingActionsOutlinedIcon></PendingActionsOutlinedIcon>\r\n            </div>{\" \"}\r\n            <br />\r\n            <span className=\"number\">{listPedding.length}</span>\r\n          </div>\r\n          <div className=\"order order-cancel\">\r\n            <span>Order Cancel</span>\r\n            <div className=\"order-pending-icon\">\r\n              <CancelOutlinedIcon></CancelOutlinedIcon>\r\n            </div>\r\n            <br />\r\n            <span className=\"number\">0</span>\r\n          </div>\r\n          <div className=\"order order-process\">\r\n            <span>Order Process</span>\r\n            <div className=\"order-pending-icon\">\r\n              <SpellcheckOutlinedIcon></SpellcheckOutlinedIcon>\r\n            </div>\r\n            <br />\r\n            <span className=\"number\">{process.length}</span>\r\n          </div>\r\n          <div className=\"order order-total\">\r\n            <span>Order Total</span>\r\n            <div className=\"order-pending-icon\">\r\n              <DoNotDisturbOnTotalSilenceOutlinedIcon></DoNotDisturbOnTotalSilenceOutlinedIcon>\r\n            </div>\r\n            <br />\r\n            <span className=\"number\"> $ {total.toFixed(2)}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"container__order--list\">\r\n          <DataGrid\r\n            pageSize={9}\r\n            rows={rows}\r\n            columns={columns}\r\n            checkboxSelection\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withAlert()(QuanLyNguoiDung);\r\n"]},"metadata":{},"sourceType":"module"}
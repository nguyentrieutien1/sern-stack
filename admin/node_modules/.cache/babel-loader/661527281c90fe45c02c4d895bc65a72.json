{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\component\\\\Chat\\\\Chat.js\";\nimport React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport actions from \"./../../actions/userActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"./Chat.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.handleRepMess = (id, idUser) => {\n      this.props.handleRepMess(id);\n      setTimeout(() => {\n        let {\n          arr\n        } = this.state;\n        let findId = this.state.arr.findIndex(e => e.id === id);\n        arr[findId].active = false;\n        this.setState({\n          arr: arr,\n          username: arr[findId].username,\n          image: arr[findId].image\n        });\n      }, 300);\n      axios.get(`http://localhost:9000/chat/id?q=${idUser}`).then(res => {\n        let data = res.data.result;\n        this.setState({\n          messBuyId: data,\n          idUser: idUser\n        });\n      }).catch(e => console.log(e));\n      this.socket.on(\"message_hi\", message => {\n        axios.get(`http://localhost:9000/chat/id?q=${idUser}`).then(res => {\n          let data = res.data.result;\n          this.setState({\n            messBuyId: data\n          });\n        });\n      });\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.handleOnClick = e => {\n      e.preventDefault();\n      let {\n        message,\n        idUser\n      } = this.state;\n      this.socket.emit(\"send_mess\", {\n        message: message,\n        idUser: idUser,\n        username: \"admin\",\n        email: \"admin123@gmail.com\",\n        image: \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\"\n      });\n      axios.post(`http://localhost:9000/chat`, {\n        message: message,\n        idUser: idUser,\n        username: \"admin\",\n        email: \"admin123@gmail.com\",\n        image: \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\"\n      }).then(res => {\n        axios.get(`http://localhost:9000/chat/id?q=${this.state.idUser}`).then(res => {\n          let data = res.data.result;\n          this.setState({\n            messBuyId: data,\n            idUser: idUser\n          }, () => {\n            let app = document.querySelector(\".app\");\n            app.scrollTo(0, app.scrollHeight - app.clientHeight);\n          });\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      message: \"\",\n      arr: [],\n      isSeen: true,\n      idUser: 0,\n      id: 0,\n      message: \"\",\n      username: \"\",\n      image: \"\",\n      messBuyId: []\n    };\n    this.socket = io(`localhost:9000/`, {\n      transports: [\"websocket\", \"polling\", \"flashsocket\"]\n    });\n  }\n\n  componentDidMount() {\n    this.props.getAllUser();\n    this.props.getAllMess();\n    let idUser = [];\n    this.props.listUser.forEach(element => {\n      idUser.push(element.id);\n    });\n    idUser.forEach(element => {\n      this.socket.emit(\"join_rom\", element);\n    });\n    setTimeout(() => {\n      let obj = {};\n      let arrObj = [];\n      this.props.chat.forEach((el, i) => {\n        if (el.username !== \"admin\") {\n          let result = arrObj.findIndex(e => e.email === el.email);\n\n          if (result === -1) {\n            arrObj.push(el);\n          } else {\n            arrObj[result].email = el.email;\n            arrObj[result].message = el.message;\n            arrObj[result].username = el.username;\n            arrObj[result].image = el.image;\n            arrObj[result].active = el.active;\n            arrObj[result].idUser = el.idUser;\n          }\n        }\n      });\n      this.setState({\n        arr: arrObj\n      });\n    }, 300);\n    this.socket.on(\"message_hi\", message => {\n      let {\n        arr\n      } = this.state;\n      let findIndex = arr.findIndex(e => e.email === message.email);\n\n      if (findIndex === -1) {\n        arr.push(message);\n      } else {\n        arr[findIndex].username = message.username;\n        arr[findIndex].message = message.message;\n        arr[findIndex].id = message.id;\n        arr[findIndex].image = message.image;\n        arr[findIndex].active = true;\n      }\n\n      this.setState({\n        arr: arr\n      });\n    });\n    console.log(123);\n  }\n\n  render() {\n    console.log(this.state.idUser);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contasiner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MESSENGER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), this.state.arr.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleRepMess(e.id, e.idUser),\n            className: \"mess\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avt\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content-mess\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"username\",\n                  children: e.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: e.active ? `message isActive` : `message`,\n                  children: e.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: e.active ? `seen` : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat__realtime\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: this.state.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `name ${this.state.username}`,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: this.state.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"close-icon\",\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), this.state.messBuyId.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"all__mess\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"all__mess-img\",\n                children: [e.username !== \"admin\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: e.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `mess__detail ${e.username}`,\n                children: [e.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 33\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input__message\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"input\",\n              id: \"standard-basic\",\n              label: \"Address\",\n              variant: \"standard\",\n              size: \"small\",\n              name: \"address\",\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              onClick: this.handleOnClick,\n              children: \"SEND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listUser: state.listUser,\n    chat: state.chat\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUser: () => {\n      dispatch(actions.getAllUser());\n    },\n    getAllMess: () => {\n      dispatch(actions.getAllMess());\n    },\n    handleRepMess: id => {\n      dispatch(actions.handleRepMess(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/component/Chat/Chat.js"],"names":["React","Component","Button","TextField","DataGrid","connect","io","actions","CloseIcon","axios","Chat","constructor","props","handleOnChange","e","setState","message","target","value","handleRepMess","id","idUser","setTimeout","arr","state","findId","findIndex","active","username","image","get","then","res","data","result","messBuyId","catch","console","log","socket","on","handleOnClick","preventDefault","emit","email","post","app","document","querySelector","scrollTo","scrollHeight","clientHeight","err","isSeen","transports","componentDidMount","getAllUser","getAllMess","listUser","forEach","element","push","obj","arrObj","chat","el","i","render","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmEnBC,cAnEmB,GAmEDC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AADN,OAAd;AAGD,KAvEkB;;AAAA,SAwEnBC,aAxEmB,GAwEH,CAACC,EAAD,EAAKC,MAAL,KAAgB;AAC9B,WAAKT,KAAL,CAAWO,aAAX,CAAyBC,EAAzB;AACAE,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI;AAAEC,UAAAA;AAAF,YAAU,KAAKC,KAAnB;AACA,YAAIC,MAAM,GAAG,KAAKD,KAAL,CAAWD,GAAX,CAAeG,SAAf,CAA0BZ,CAAD,IAAOA,CAAC,CAACM,EAAF,KAASA,EAAzC,CAAb;AACAG,QAAAA,GAAG,CAACE,MAAD,CAAH,CAAYE,MAAZ,GAAqB,KAArB;AACA,aAAKZ,QAAL,CAAc;AACZQ,UAAAA,GAAG,EAAEA,GADO;AAEZK,UAAAA,QAAQ,EAAEL,GAAG,CAACE,MAAD,CAAH,CAAYG,QAFV;AAGZC,UAAAA,KAAK,EAAEN,GAAG,CAACE,MAAD,CAAH,CAAYI;AAHP,SAAd;AAKD,OATS,EASP,GATO,CAAV;AAWApB,MAAAA,KAAK,CACFqB,GADH,CACQ,mCAAkCT,MAAO,EADjD,EAEGU,IAFH,CAESC,GAAD,IAAS;AACb,YAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASC,MAApB;AACA,aAAKnB,QAAL,CAAc;AACZoB,UAAAA,SAAS,EAAEF,IADC;AAEZZ,UAAAA,MAAM,EAAEA;AAFI,SAAd;AAID,OARH,EASGe,KATH,CASUtB,CAAD,IAAOuB,OAAO,CAACC,GAAR,CAAYxB,CAAZ,CAThB;AAUA,WAAKyB,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA8BxB,OAAD,IAAa;AACxCP,QAAAA,KAAK,CAACqB,GAAN,CAAW,mCAAkCT,MAAO,EAApD,EAAuDU,IAAvD,CAA6DC,GAAD,IAAS;AACnE,cAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASC,MAApB;AACA,eAAKnB,QAAL,CAAc;AACZoB,YAAAA,SAAS,EAAEF;AADC,WAAd;AAGD,SALD;AAMD,OAPD;AAQD,KAvGkB;;AAAA,SAwGnBpB,cAxGmB,GAwGDC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AADN,OAAd;AAGD,KA5GkB;;AAAA,SA6GnBuB,aA7GmB,GA6GF3B,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAAC4B,cAAF;AACA,UAAI;AAAE1B,QAAAA,OAAF;AAAWK,QAAAA;AAAX,UAAsB,KAAKG,KAA/B;AACA,WAAKe,MAAL,CAAYI,IAAZ,CAAiB,WAAjB,EAA8B;AAC5B3B,QAAAA,OAAO,EAAEA,OADmB;AAE5BK,QAAAA,MAAM,EAAEA,MAFoB;AAG5BO,QAAAA,QAAQ,EAAE,OAHkB;AAI5BgB,QAAAA,KAAK,EAAE,oBAJqB;AAK5Bf,QAAAA,KAAK,EACH;AAN0B,OAA9B;AAQApB,MAAAA,KAAK,CACFoC,IADH,CACS,4BADT,EACsC;AAClC7B,QAAAA,OAAO,EAAEA,OADyB;AAElCK,QAAAA,MAAM,EAAEA,MAF0B;AAGlCO,QAAAA,QAAQ,EAAE,OAHwB;AAIlCgB,QAAAA,KAAK,EAAE,oBAJ2B;AAKlCf,QAAAA,KAAK,EACH;AANgC,OADtC,EASGE,IATH,CASSC,GAAD,IAAS;AACbvB,QAAAA,KAAK,CACFqB,GADH,CACQ,mCAAkC,KAAKN,KAAL,CAAWH,MAAO,EAD5D,EAEGU,IAFH,CAESC,GAAD,IAAS;AACb,cAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASC,MAApB;AACA,eAAKnB,QAAL,CACE;AACEoB,YAAAA,SAAS,EAAEF,IADb;AAEEZ,YAAAA,MAAM,EAAEA;AAFV,WADF,EAKE,MAAM;AACJ,gBAAIyB,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAV;AACAF,YAAAA,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBH,GAAG,CAACI,YAAJ,GAAmBJ,GAAG,CAACK,YAAvC;AACD,WARH;AAUD,SAdH;AAeD,OAzBH,EA0BGf,KA1BH,CA0BUgB,GAAD,IAASf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CA1BlB;AA2BD,KAnJkB;;AAEjB,SAAK5B,KAAL,GAAa;AACXR,MAAAA,OAAO,EAAE,EADE;AAEXO,MAAAA,GAAG,EAAE,EAFM;AAGX8B,MAAAA,MAAM,EAAE,IAHG;AAIXhC,MAAAA,MAAM,EAAE,CAJG;AAKXD,MAAAA,EAAE,EAAE,CALO;AAMXJ,MAAAA,OAAO,EAAE,EANE;AAOXY,MAAAA,QAAQ,EAAE,EAPC;AAQXC,MAAAA,KAAK,EAAE,EARI;AASXM,MAAAA,SAAS,EAAE;AATA,KAAb;AAWA,SAAKI,MAAL,GAAcjC,EAAE,CAAE,iBAAF,EAAoB;AAClCgD,MAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,aAAzB;AADsB,KAApB,CAAhB;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK3C,KAAL,CAAW4C,UAAX;AACA,SAAK5C,KAAL,CAAW6C,UAAX;AACA,QAAIpC,MAAM,GAAG,EAAb;AACA,SAAKT,KAAL,CAAW8C,QAAX,CAAoBC,OAApB,CAA6BC,OAAD,IAAa;AACvCvC,MAAAA,MAAM,CAACwC,IAAP,CAAYD,OAAO,CAACxC,EAApB;AACD,KAFD;AAGAC,IAAAA,MAAM,CAACsC,OAAP,CAAgBC,OAAD,IAAa;AAC1B,WAAKrB,MAAL,CAAYI,IAAZ,CAAiB,UAAjB,EAA6BiB,OAA7B;AACD,KAFD;AAGAtC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIwC,GAAG,GAAG,EAAV;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,WAAKnD,KAAL,CAAWoD,IAAX,CAAgBL,OAAhB,CAAwB,CAACM,EAAD,EAAKC,CAAL,KAAW;AACjC,YAAID,EAAE,CAACrC,QAAH,KAAgB,OAApB,EAA6B;AAC3B,cAAIM,MAAM,GAAG6B,MAAM,CAACrC,SAAP,CAAkBZ,CAAD,IAAOA,CAAC,CAAC8B,KAAF,KAAYqB,EAAE,CAACrB,KAAvC,CAAb;;AACA,cAAIV,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACjB6B,YAAAA,MAAM,CAACF,IAAP,CAAYI,EAAZ;AACD,WAFD,MAEO;AACLF,YAAAA,MAAM,CAAC7B,MAAD,CAAN,CAAeU,KAAf,GAAuBqB,EAAE,CAACrB,KAA1B;AACAmB,YAAAA,MAAM,CAAC7B,MAAD,CAAN,CAAelB,OAAf,GAAyBiD,EAAE,CAACjD,OAA5B;AACA+C,YAAAA,MAAM,CAAC7B,MAAD,CAAN,CAAeN,QAAf,GAA0BqC,EAAE,CAACrC,QAA7B;AACAmC,YAAAA,MAAM,CAAC7B,MAAD,CAAN,CAAeL,KAAf,GAAuBoC,EAAE,CAACpC,KAA1B;AACAkC,YAAAA,MAAM,CAAC7B,MAAD,CAAN,CAAeP,MAAf,GAAwBsC,EAAE,CAACtC,MAA3B;AACAoC,YAAAA,MAAM,CAAC7B,MAAD,CAAN,CAAeb,MAAf,GAAwB4C,EAAE,CAAC5C,MAA3B;AACD;AACF;AACF,OAdD;AAeA,WAAKN,QAAL,CAAc;AACZQ,QAAAA,GAAG,EAAEwC;AADO,OAAd;AAGD,KArBS,EAqBP,GArBO,CAAV;AAsBA,SAAKxB,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA8BxB,OAAD,IAAa;AACxC,UAAI;AAAEO,QAAAA;AAAF,UAAU,KAAKC,KAAnB;AACA,UAAIE,SAAS,GAAGH,GAAG,CAACG,SAAJ,CAAeZ,CAAD,IAAOA,CAAC,CAAC8B,KAAF,KAAY5B,OAAO,CAAC4B,KAAzC,CAAhB;;AACA,UAAIlB,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpBH,QAAAA,GAAG,CAACsC,IAAJ,CAAS7C,OAAT;AACD,OAFD,MAEO;AACLO,QAAAA,GAAG,CAACG,SAAD,CAAH,CAAeE,QAAf,GAA0BZ,OAAO,CAACY,QAAlC;AACAL,QAAAA,GAAG,CAACG,SAAD,CAAH,CAAeV,OAAf,GAAyBA,OAAO,CAACA,OAAjC;AACAO,QAAAA,GAAG,CAACG,SAAD,CAAH,CAAeN,EAAf,GAAoBJ,OAAO,CAACI,EAA5B;AACAG,QAAAA,GAAG,CAACG,SAAD,CAAH,CAAeG,KAAf,GAAuBb,OAAO,CAACa,KAA/B;AACAN,QAAAA,GAAG,CAACG,SAAD,CAAH,CAAeC,MAAf,GAAwB,IAAxB;AACD;;AACD,WAAKZ,QAAL,CAAc;AACZQ,QAAAA,GAAG,EAAEA;AADO,OAAd;AAGD,KAfD;AAgBAc,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;AAkFD6B,EAAAA,MAAM,GAAG;AACP9B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWH,MAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKG,KAAL,CAAWD,GAAX,CAAe6C,GAAf,CAAoBtD,CAAD,IAAO;AACzB,8BACE;AACE,YAAA,OAAO,EAAE,MAAM,KAAKK,aAAL,CAAmBL,CAAC,CAACM,EAArB,EAAyBN,CAAC,CAACO,MAA3B,CADjB;AAEE,YAAA,SAAS,EAAC,MAFZ;AAAA,oCAIE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEP,CAAC,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AAAI,kBAAA,SAAS,EAAC,UAAd;AAAA,4BAA0Bf,CAAC,CAACc;AAA5B;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,kBAAA,SAAS,EAAEd,CAAC,CAACa,MAAF,GAAY,kBAAZ,GAAiC,SAAlD;AAAA,4BACGb,CAAC,CAACE;AADL;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,gBAAA,SAAS,EAAEF,CAAC,CAACa,MAAF,GAAY,MAAZ,GAAoB;AAApC;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAmBD,SApBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAE,KAAKH,KAAL,CAAWK;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAG,QAAO,KAAKL,KAAL,CAAWI,QAAS,EAA5C;AAAA,uCACE;AAAA,4BAAK,KAAKJ,KAAL,CAAWI;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAcG,KAAKJ,KAAL,CAAWW,SAAX,CAAqBiC,GAArB,CAA0BtD,CAAD,IAAO;AAC/B,gCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,2BAEEA,CAAC,CAACc,QAAF,KAAe,OAFjB,oBAE0B;AAAK,kBAAA,GAAG,EAAEd,CAAC,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,wBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAM,gBAAA,SAAS,EAAG,gBAAef,CAAC,CAACc,QAAS,EAA5C;AAAA,2BACGd,CAAC,CAACE,OADL,oBACc;AAAA;AAAA;AAAA;AAAA,wBADd,EACqB,GADrB;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD,WAZA,CAdH,eA2BE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,SAAS,EAAC,OADZ;AAEE,cAAA,EAAE,EAAC,gBAFL;AAGE,cAAA,KAAK,EAAC,SAHR;AAIE,cAAA,OAAO,EAAC,UAJV;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,IAAI,EAAC,SANP;AAOE,cAAA,QAAQ,EAAE,KAAKH;AAPjB;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAE,KAAK4B,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4ED;;AAnO0B;;AAqO7B,MAAM4B,eAAe,GAAI7C,KAAD,IAAW;AACjC,SAAO;AAAEkC,IAAAA,QAAQ,EAAElC,KAAK,CAACkC,QAAlB;AAA4BM,IAAAA,IAAI,EAAExC,KAAK,CAACwC;AAAxC,GAAP;AACD,CAFD;;AAGA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLf,IAAAA,UAAU,EAAE,MAAM;AAChBe,MAAAA,QAAQ,CAAChE,OAAO,CAACiD,UAAR,EAAD,CAAR;AACD,KAHI;AAILC,IAAAA,UAAU,EAAE,MAAM;AAChBc,MAAAA,QAAQ,CAAChE,OAAO,CAACkD,UAAR,EAAD,CAAR;AACD,KANI;AAOLtC,IAAAA,aAAa,EAAGC,EAAD,IAAQ;AACrBmD,MAAAA,QAAQ,CAAChE,OAAO,CAACY,aAAR,CAAsBC,EAAtB,CAAD,CAAR;AACD;AATI,GAAP;AAWD,CAZD;;AAaA,eAAef,OAAO,CAACgE,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C5D,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport actions from \"./../../actions/userActions\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport \"./Chat.css\";\r\nimport axios from \"axios\";\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      arr: [],\r\n      isSeen: true,\r\n      idUser: 0,\r\n      id: 0,\r\n      message: \"\",\r\n      username: \"\",\r\n      image: \"\",\r\n      messBuyId: [],\r\n    };\r\n    this.socket = io(`localhost:9000/`, {\r\n      transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllUser();\r\n    this.props.getAllMess();\r\n    let idUser = [];\r\n    this.props.listUser.forEach((element) => {\r\n      idUser.push(element.id);\r\n    });\r\n    idUser.forEach((element) => {\r\n      this.socket.emit(\"join_rom\", element);\r\n    });\r\n    setTimeout(() => {\r\n      let obj = {};\r\n      let arrObj = [];\r\n      this.props.chat.forEach((el, i) => {\r\n        if (el.username !== \"admin\") {\r\n          let result = arrObj.findIndex((e) => e.email === el.email);\r\n          if (result === -1) {\r\n            arrObj.push(el);\r\n          } else {\r\n            arrObj[result].email = el.email;\r\n            arrObj[result].message = el.message;\r\n            arrObj[result].username = el.username;\r\n            arrObj[result].image = el.image;\r\n            arrObj[result].active = el.active;\r\n            arrObj[result].idUser = el.idUser;\r\n          }\r\n        }\r\n      });\r\n      this.setState({\r\n        arr: arrObj,\r\n      });\r\n    }, 300);\r\n    this.socket.on(\"message_hi\", (message) => {\r\n      let { arr } = this.state;\r\n      let findIndex = arr.findIndex((e) => e.email === message.email);\r\n      if (findIndex === -1) {\r\n        arr.push(message);\r\n      } else {\r\n        arr[findIndex].username = message.username;\r\n        arr[findIndex].message = message.message;\r\n        arr[findIndex].id = message.id;\r\n        arr[findIndex].image = message.image;\r\n        arr[findIndex].active = true;\r\n      }\r\n      this.setState({\r\n        arr: arr,\r\n      });\r\n    });\r\n    console.log(123);\r\n  }\r\n  handleOnChange = (e) => {\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n  };\r\n  handleRepMess = (id, idUser) => {\r\n    this.props.handleRepMess(id);\r\n    setTimeout(() => {\r\n      let { arr } = this.state;\r\n      let findId = this.state.arr.findIndex((e) => e.id === id);\r\n      arr[findId].active = false;\r\n      this.setState({\r\n        arr: arr,\r\n        username: arr[findId].username,\r\n        image: arr[findId].image,\r\n      });\r\n    }, 300);\r\n\r\n    axios\r\n      .get(`http://localhost:9000/chat/id?q=${idUser}`)\r\n      .then((res) => {\r\n        let data = res.data.result;\r\n        this.setState({\r\n          messBuyId: data,\r\n          idUser: idUser,\r\n        });\r\n      })\r\n      .catch((e) => console.log(e));\r\n    this.socket.on(\"message_hi\", (message) => {\r\n      axios.get(`http://localhost:9000/chat/id?q=${idUser}`).then((res) => {\r\n        let data = res.data.result;\r\n        this.setState({\r\n          messBuyId: data,\r\n        });\r\n      });\r\n    });\r\n  };\r\n  handleOnChange = (e) => {\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n  };\r\n  handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    let { message, idUser } = this.state;\r\n    this.socket.emit(\"send_mess\", {\r\n      message: message,\r\n      idUser: idUser,\r\n      username: \"admin\",\r\n      email: \"admin123@gmail.com\",\r\n      image:\r\n        \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\",\r\n    });\r\n    axios\r\n      .post(`http://localhost:9000/chat`, {\r\n        message: message,\r\n        idUser: idUser,\r\n        username: \"admin\",\r\n        email: \"admin123@gmail.com\",\r\n        image:\r\n          \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\",\r\n      })\r\n      .then((res) => {\r\n        axios\r\n          .get(`http://localhost:9000/chat/id?q=${this.state.idUser}`)\r\n          .then((res) => {\r\n            let data = res.data.result;\r\n            this.setState(\r\n              {\r\n                messBuyId: data,\r\n                idUser: idUser,\r\n              },\r\n              () => {\r\n                let app = document.querySelector(\".app\");\r\n                app.scrollTo(0, app.scrollHeight - app.clientHeight);\r\n              }\r\n            );\r\n          });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  render() {\r\n    console.log(this.state.idUser);\r\n    return (\r\n      <div className=\"contasiner\">\r\n        <div className=\"form__chat\">\r\n          <h1>MESSENGER</h1>\r\n          {this.state.arr.map((e) => {\r\n            return (\r\n              <div\r\n                onClick={() => this.handleRepMess(e.id, e.idUser)}\r\n                className=\"mess\"\r\n              >\r\n                <div className=\"avt\">\r\n                  <img src={e.image} />\r\n                </div>\r\n                <div className=\"content\">\r\n                  <div className=\"content-mess\">\r\n                    <h2 className=\"username\">{e.username}</h2>\r\n                    <span className={e.active ? `message isActive` : `message`}>\r\n                      {e.message}\r\n                    </span>\r\n                  </div>\r\n                  <div className={e.active ? `seen` : \"\"}></div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"data\">\r\n          <div className=\"app\">\r\n            <div className=\"chat__realtime\">\r\n              <div className=\"info\">\r\n                <div className=\"img\">\r\n                  <img src={this.state.image} />\r\n                </div>\r\n                <div className={`name ${this.state.username}`}>\r\n                  <h3>{this.state.username}</h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"close-icon\">\r\n                <CloseIcon />\r\n              </div>\r\n            </div>\r\n            {this.state.messBuyId.map((e) => {\r\n              return (\r\n                <div className=\"all__mess\">\r\n                  <div className=\"all__mess-img\">\r\n\r\n                   {e.username !== \"admin\"} <img src={e.image} />\r\n                  </div>\r\n                  <span className={`mess__detail ${e.username}`}>\r\n                    {e.message} <br />{\" \"}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"input__message\">\r\n              <TextField\r\n                className=\"input\"\r\n                id=\"standard-basic\"\r\n                label=\"Address\"\r\n                variant=\"standard\"\r\n                size=\"small\"\r\n                name=\"address\"\r\n                onChange={this.handleOnChange}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={this.handleOnClick}\r\n              >\r\n                SEND\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { listUser: state.listUser, chat: state.chat };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllUser: () => {\r\n      dispatch(actions.getAllUser());\r\n    },\r\n    getAllMess: () => {\r\n      dispatch(actions.getAllMess());\r\n    },\r\n    handleRepMess: (id) => {\r\n      dispatch(actions.handleRepMess(id));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}
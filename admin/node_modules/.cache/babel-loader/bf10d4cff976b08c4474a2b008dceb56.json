{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\component\\\\Chat\\\\Chat.js\";\nimport React, { Component } from \"react\";\nimport { TextField, Button } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport actions from \"./../../actions/userActions\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.hanleOnClick = e => {\n      e.preventDefault();\n      this.socket.emit(\"send_mess\", {\n        mess: this.state.message,\n        id: this.state.id\n      });\n    };\n\n    this.joinRoom = e => {\n      this.socket.emit(\"join_rom\", e.id);\n      this.setState({\n        id: e.id\n      }, () => {\n        console.log(this.state.id);\n      });\n    };\n\n    this.state = {\n      message: \"\",\n      id: 0,\n      arr: []\n    };\n    this.socket = io(`localhost:9000/`, {\n      transports: [\"websocket\", \"polling\", \"flashsocket\"]\n    });\n  }\n\n  componentDidMount() {\n    this.props.getAllUser();\n    let idUser = [];\n    this.props.listUser.forEach(element => {\n      idUser.push(element.id);\n    });\n    idUser.forEach(element => {\n      this.socket.emit(\"join_rom\", element);\n    });\n    this.socket.on(\"message_hi\", message => {\n      let {\n        arr\n      } = this.state;\n      let findInsex = arr.findIndex(e => {\n        return e.username === message.username;\n      });\n\n      if (findInsex === -1) {\n        arr.push(message);\n      } else {\n        arr[findInsex].username = message.username;\n        arr[findInsex].mess = message.mess;\n        arr[findInsex].id = message.id;\n      }\n\n      this.setState({\n        arr: arr\n      }, () => {\n        console.log(this.state.arr);\n      });\n    });\n  }\n\n  render() {\n    const rows = [...this.props.listUser];\n    const columns = [{\n      field: \"id\",\n      headerName: \"ID\",\n      width: 70,\n      headerAlign: \"center\"\n    }, {\n      field: \"username\",\n      headerName: \"Username\",\n      width: 100\n    }, {\n      field: \"email\",\n      headerName: \"Email\",\n      width: 200\n    }, {\n      field: \"role\",\n      headerName: \"Role\",\n      width: 100\n    }, {\n      field: \"password\",\n      headerName: \"Password\",\n      width: 100\n    }, {\n      field: \"address\",\n      headerName: \"Address\",\n      width: 100,\n      type: \"text\"\n    }, {\n      field: \"numberphone\",\n      headerName: \"Number Phone\",\n      width: 100,\n      type: \"text\"\n    }, {\n      field: \"button\",\n      headerName: \"Action\",\n      width: 200,\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"edit\",\n            variant: \"contained\",\n            color: \"success\",\n            onClick: () => this.joinRoom(cellValues),\n            children: \"SEND MESSAGE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      },\n      headerAlign: \"center\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" ME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"mess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"mess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"mess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: rows,\n            columns: columns,\n            pageSize: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listUser: state.listUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUser: () => {\n      dispatch(actions.getAllUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/component/Chat/Chat.js"],"names":["React","Component","TextField","Button","DataGrid","connect","io","actions","Chat","constructor","props","handleOnChange","e","setState","message","target","value","hanleOnClick","preventDefault","socket","emit","mess","state","id","joinRoom","console","log","arr","transports","componentDidMount","getAllUser","idUser","listUser","forEach","element","push","on","findInsex","findIndex","username","render","rows","columns","field","headerName","width","headerAlign","type","renderCell","cellValues","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport actions from \"./../../actions/userActions\";\r\nimport \"./Chat.css\";\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      id: 0,\r\n      arr: [],\r\n    };\r\n    this.socket = io(`localhost:9000/`, {\r\n      transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllUser();\r\n    let idUser = [];\r\n    this.props.listUser.forEach((element) => {\r\n      idUser.push(element.id);\r\n    });\r\n    idUser.forEach((element) => {\r\n      this.socket.emit(\"join_rom\", element);\r\n    });\r\n    this.socket.on(\"message_hi\", (message) => {\r\n      let { arr } = this.state;\r\n      let findInsex = arr.findIndex((e) => {\r\n        return e.username === message.username;\r\n      });\r\n      if (findInsex === -1) {\r\n        arr.push(message);\r\n      } else {\r\n        arr[findInsex].username = message.username;\r\n        arr[findInsex].mess = message.mess;\r\n        arr[findInsex].id = message.id;\r\n      }\r\n\r\n      this.setState(\r\n        {\r\n          arr: arr,\r\n        },\r\n        () => {\r\n          console.log(this.state.arr);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  handleOnChange = (e) => {\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n  };\r\n  hanleOnClick = (e) => {\r\n    e.preventDefault();\r\n    this.socket.emit(\"send_mess\", {\r\n      mess: this.state.message,\r\n      id: this.state.id,\r\n    });\r\n  };\r\n  joinRoom = (e) => {\r\n    this.socket.emit(\"join_rom\", e.id);\r\n    this.setState(\r\n      {\r\n        id: e.id,\r\n      },\r\n      () => {\r\n        console.log(this.state.id);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const rows = [...this.props.listUser];\r\n    const columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70, headerAlign: \"center\" },\r\n      {\r\n        field: \"username\",\r\n        headerName: \"Username\",\r\n        width: 100,\r\n      },\r\n      {\r\n        field: \"email\",\r\n        headerName: \"Email\",\r\n        width: 200,\r\n      },\r\n      {\r\n        field: \"role\",\r\n        headerName: \"Role\",\r\n        width: 100,\r\n      },\r\n      {\r\n        field: \"password\",\r\n        headerName: \"Password\",\r\n        width: 100,\r\n      },\r\n      {\r\n        field: \"address\",\r\n        headerName: \"Address\",\r\n        width: 100,\r\n        type: \"text\",\r\n      },\r\n      {\r\n        field: \"numberphone\",\r\n        headerName: \"Number Phone\",\r\n        width: 100,\r\n        type: \"text\",\r\n      },\r\n      {\r\n        field: \"button\",\r\n        headerName: \"Action\",\r\n        width: 200,\r\n\r\n        renderCell: (cellValues) => {\r\n          return (\r\n            <>\r\n              <Button\r\n                className=\"edit\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={() => this.joinRoom(cellValues)}\r\n              >\r\n                SEND MESSAGE\r\n              </Button>\r\n            </>\r\n          );\r\n        },\r\n        headerAlign: \"center\",\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"form__chat\">\r\n          <h1> ME</h1>\r\n          <div className=\"tool\">\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <div className=\"user\">\r\n                  <h3>name</h3>\r\n                  <h3>mess</h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"user\">\r\n                  <h3>name</h3>\r\n                  <h3>mess</h3>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"user\">\r\n                  <h3>name</h3>\r\n                  <h3>mess</h3>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <>\r\n          <div className=\"data\">\r\n            <DataGrid rows={rows} columns={columns} pageSize={4} />\r\n          </div>\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { listUser: state.listUser };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllUser: () => {\r\n      dispatch(actions.getAllUser());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\component\\\\Chat\\\\Chat.js\";\nimport React, { Component } from \"react\";\nimport { TextField, Button } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { withAlert } from \"react-alert\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport CancelPresentationOutlinedIcon from \"@mui/icons-material/CancelPresentationOutlined\";\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport actions from \"./../../actions/userActions\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      listUser: [],\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      address: \"\",\n      numberphone: \"\",\n      role: \"\",\n      toggleForm: true,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllUser();\n  }\n\n  render() {\n    const columns = [{\n      field: \"id\",\n      headerName: \"ID\",\n      width: 70,\n      headerAlign: \"center\"\n    }, {\n      field: \"username\",\n      headerName: \"Username\",\n      width: 100\n    }, {\n      field: \"email\",\n      headerName: \"Email\",\n      width: 200\n    }, {\n      field: \"role\",\n      headerName: \"Role\",\n      width: 100\n    }, {\n      field: \"password\",\n      headerName: \"Password\",\n      width: 100\n    }, {\n      field: \"address\",\n      headerName: \"Address\",\n      width: 100,\n      type: \"text\"\n    }, {\n      field: \"numberphone\",\n      headerName: \"Number Phone\",\n      width: 100,\n      type: \"text\"\n    }, {\n      field: \"button\",\n      headerName: \"Action\",\n      width: 200,\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"edit\",\n            variant: \"contained\",\n            color: \"success\",\n            onClick: () => this.handleUpdateUser(cellValues),\n            children: \"EDIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"warning\",\n            onClick: () => this.handleClick(cellValues),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      },\n      headerAlign: \"center\"\n    }];\n    const rowss = [...getArr];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.toggleForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-controll\",\n          children: \"FORM COTROLL CUSTOMER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CancelPresentationOutlinedIcon, {\n          onClick: this.handleCloseForm,\n          className: \"close-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"outlined-basic\",\n          label: \"User Name\",\n          variant: \"standard\",\n          size: \"small\",\n          name: \"username\",\n          value: this.state.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"filled-basic\",\n          label: \"Email\",\n          variant: \"standard\",\n          size: \"small\",\n          name: \"email\",\n          \"aria-controls\": true,\n          value: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"standard-basic\",\n          label: \"Pass word\",\n          variant: \"standard\",\n          size: \"small\",\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: this.handleOnChange,\n          className: \"input\",\n          id: \"standard-basic\",\n          label: \"Address\",\n          variant: \"standard\",\n          size: \"small\",\n          name: \"address\",\n          value: this.state.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          sx: {\n            m: 1,\n            minWidth: 120\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-standard-label\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-standard-label\",\n            id: \"demo-simple-select-standard\",\n            label: \"Age\",\n            onChange: this.handleOnChange,\n            name: \"role\",\n            value: this.state.role,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"customer\",\n              selected: true,\n              children: \"customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"admin\",\n              children: \"admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numberphone\",\n            children: \"Number Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n            placeholder: \"Enter phone number\",\n            onChange: this.handleGetNumberPhone,\n            value: this.state.numberphone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: this.createNewUser,\n          className: \"success-btn\",\n          children: this.state.id ? `Update` : `Register`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : \"\", this.state.isLoading ? `Loading Data . . . Please waiting !!! ` : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleToggleForm,\n            style: {\n              marginBottom: \"20px\"\n            },\n            className: \"edit\",\n            variant: \"contained\",\n            color: \"success\",\n            children: [\"Add Account\", /*#__PURE__*/_jsxDEV(AddOutlinedIcon, {\n              style: {\n                paddingLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: rows,\n            columns: columns,\n            pageSize: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hot-customer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"top-customer\",\n              children: \"TOP CUSTOMER :v\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-customer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"New Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n              rows: rows,\n              columns: columns,\n              pageSize: 6,\n              autoHeight: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUser: () => {\n      dis;\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/component/Chat/Chat.js"],"names":["React","Component","TextField","Button","DataGrid","withAlert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CancelPresentationOutlinedIcon","AddOutlinedIcon","PhoneInput","FormControl","Select","MenuItem","InputLabel","actions","Chat","constructor","props","state","id","listUser","username","email","password","address","numberphone","role","toggleForm","isLoading","componentDidMount","getAllUser","render","columns","field","headerName","width","headerAlign","type","renderCell","cellValues","handleUpdateUser","handleClick","rowss","getArr","handleCloseForm","handleOnChange","m","minWidth","handleGetNumberPhone","createNewUser","handleToggleForm","marginBottom","paddingLeft","rows","mapStateToProps","mapDispatchToProps","dispatch","dis","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,eAAlC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,8BAAP,MAA2C,gDAA3C;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAO,oCAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,YAAP;;;;AACA,MAAMC,IAAN,SAAmBpB,SAAnB,CAA6B;AAC3BqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,QAAQ,EAAE,EALC;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,WAAW,EAAE,EAPF;AAQXC,MAAAA,IAAI,EAAE,EARK;AASXC,MAAAA,UAAU,EAAE,IATD;AAUXC,MAAAA,SAAS,EAAE;AAVA,KAAb;AAYD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,KAAL,CAAWa,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,UAAU,EAAE,IAA3B;AAAiCC,MAAAA,KAAK,EAAE,EAAxC;AAA4CC,MAAAA,WAAW,EAAE;AAAzD,KADc,EAEd;AACEH,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,UAAU,EAAE,UAFd;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAFc,EAOd;AACEF,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,UAAU,EAAE,OAFd;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAPc,EAYd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,UAAU,EAAE,MAFd;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAZc,EAiBd;AACEF,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,UAAU,EAAE,UAFd;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAjBc,EAsBd;AACEF,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,UAAU,EAAE,SAFd;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEE,MAAAA,IAAI,EAAE;AAJR,KAtBc,EA4Bd;AACEJ,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,UAAU,EAAE,cAFd;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAIEE,MAAAA,IAAI,EAAE;AAJR,KA5Bc,EAkCd;AACEJ,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,UAAU,EAAE,QAFd;AAGEC,MAAAA,KAAK,EAAE,GAHT;AAKEG,MAAAA,UAAU,EAAGC,UAAD,IAAgB;AAC1B,4BACE;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKC,gBAAL,CAAsBD,UAAtB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,CAAiBF,UAAjB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA,wBADF;AAmBD,OAzBH;AA0BEH,MAAAA,WAAW,EAAE;AA1Bf,KAlCc,CAAhB;AAgEA,UAAMM,KAAK,GAAG,CAAC,GAAGC,MAAJ,CAAd;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACG,KAAKzB,KAAL,CAAWS,UAAX,gBACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,8BAAD;AACE,UAAA,OAAO,EAAE,KAAKiB,eADhB;AAEE,UAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,SAAD;AACE,UAAA,QAAQ,EAAE,KAAKC,cADjB;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,EAAE,EAAC,gBAHL;AAIE,UAAA,KAAK,EAAC,WAJR;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,IAAI,EAAC,UAPP;AAQE,UAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWG;AARpB;AAAA;AAAA;AAAA;AAAA,gBANF,eAgBE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAE,KAAKwB,cADjB;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,EAAE,EAAC,cAHL;AAIE,UAAA,KAAK,EAAC,OAJR;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,IAAI,EAAC,OAPP;AAQE,+BARF;AASE,UAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWI;AATpB;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA2BE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAE,KAAKuB,cADjB;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,EAAE,EAAC,gBAHL;AAIE,UAAA,KAAK,EAAC,WAJR;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,IAAI,EAAC,UAPP;AAQE,UAAA,IAAI,EAAC,UARP;AASE,UAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWK;AATpB;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAsCE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAE,KAAKsB,cADjB;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,EAAE,EAAC,gBAHL;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,IAAI,EAAC,SAPP;AAQE,UAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWM;AARpB;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAgDE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,UAArB;AAAgC,UAAA,EAAE,EAAE;AAAEsB,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,QAAQ,EAAE;AAAlB,WAApC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,mCADV;AAEE,YAAA,EAAE,EAAC,6BAFL;AAGE,YAAA,KAAK,EAAC,KAHR;AAIE,YAAA,QAAQ,EAAE,KAAKF,cAJjB;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWQ,IANpB;AAAA,oCAQE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,UAAhB;AAA2B,cAAA,QAAQ,EAAE,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eAWE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhDF,eAkEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AACE,YAAA,WAAW,EAAC,oBADd;AAEE,YAAA,QAAQ,EAAE,KAAKsB,oBAFjB;AAGE,YAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWO;AAHpB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEF,eA2EE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE,KAAKwB,aAHhB;AAIE,UAAA,SAAS,EAAC,aAJZ;AAAA,oBAMG,KAAK/B,KAAL,CAAWC,EAAX,GAAiB,QAAjB,GAA4B;AAN/B;AAAA;AAAA;AAAA;AAAA,gBA3EF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAsFC,EAvFJ,EAyFG,KAAKD,KAAL,CAAWU,SAAX,GACE,wCADF,gBAGC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,KAAKsB,gBADhB;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB,aAFT;AAGE,YAAA,SAAS,EAAC,MAHZ;AAIE,YAAA,OAAO,EAAC,WAJV;AAKE,YAAA,KAAK,EAAC,SALR;AAAA,mDAQE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAE;AAAEC,gBAAAA,WAAW,EAAE;AAAf;AAAxB;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEC,IAAhB;AAAsB,YAAA,OAAO,EAAErB,OAA/B;AAAwC,YAAA,QAAQ,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,QAAD;AACE,cAAA,IAAI,EAAEqB,IADR;AAEE,cAAA,OAAO,EAAErB,OAFX;AAGE,cAAA,QAAQ,EAAE,CAHZ;AAIE,cAAA,UAAU;AAJZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA,sBA5FJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6HD;;AAnN0B;;AAqN7B,MAAMsB,eAAe,GAAIpC,KAAD,IAAW;AACjC,SAAO,EAAP;AACD,CAFD;;AAGA,MAAMqC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL1B,IAAAA,UAAU,EAAE,MAAM;AACd2B,MAAAA,GAAG;AACN;AAHI,GAAP;AAKD,CAND;;AAOA,eAAeC,OAAO,CAACJ,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxC,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { withAlert } from \"react-alert\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport CancelPresentationOutlinedIcon from \"@mui/icons-material/CancelPresentationOutlined\";\r\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport actions from \"./../../actions/userActions\";\r\nimport \"./Chat.css\";\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      listUser: [],\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      address: \"\",\r\n      numberphone: \"\",\r\n      role: \"\",\r\n      toggleForm: true,\r\n      isLoading: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllUser();\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70, headerAlign: \"center\" },\r\n      {\r\n        field: \"username\",\r\n        headerName: \"Username\",\r\n        width: 100,\r\n      },\r\n      {\r\n        field: \"email\",\r\n        headerName: \"Email\",\r\n        width: 200,\r\n      },\r\n      {\r\n        field: \"role\",\r\n        headerName: \"Role\",\r\n        width: 100,\r\n      },\r\n      {\r\n        field: \"password\",\r\n        headerName: \"Password\",\r\n        width: 100,\r\n      },\r\n      {\r\n        field: \"address\",\r\n        headerName: \"Address\",\r\n        width: 100,\r\n        type: \"text\",\r\n      },\r\n      {\r\n        field: \"numberphone\",\r\n        headerName: \"Number Phone\",\r\n        width: 100,\r\n        type: \"text\",\r\n      },\r\n      {\r\n        field: \"button\",\r\n        headerName: \"Action\",\r\n        width: 200,\r\n\r\n        renderCell: (cellValues) => {\r\n          return (\r\n            <>\r\n              <Button\r\n                className=\"edit\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={() => this.handleUpdateUser(cellValues)}\r\n              >\r\n                EDIT\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"warning\"\r\n                onClick={() => this.handleClick(cellValues)}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </>\r\n          );\r\n        },\r\n        headerAlign: \"center\",\r\n      },\r\n    ];\r\n\r\n    const rowss = [...getArr];\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.toggleForm ? (\r\n          <div className=\"form\">\r\n            <span className=\"text-controll\">FORM COTROLL CUSTOMER</span>\r\n            <CancelPresentationOutlinedIcon\r\n              onClick={this.handleCloseForm}\r\n              className=\"close-button\"\r\n            ></CancelPresentationOutlinedIcon>\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"outlined-basic\"\r\n              label=\"User Name\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n            />\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"filled-basic\"\r\n              label=\"Email\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              name=\"email\"\r\n              aria-controls\r\n              value={this.state.email}\r\n            />\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"standard-basic\"\r\n              label=\"Pass word\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.password}\r\n            />\r\n            <TextField\r\n              onChange={this.handleOnChange}\r\n              className=\"input\"\r\n              id=\"standard-basic\"\r\n              label=\"Address\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              name=\"address\"\r\n              value={this.state.address}\r\n            />\r\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n              <InputLabel id=\"demo-simple-select-standard-label\">\r\n                Role\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-standard-label\"\r\n                id=\"demo-simple-select-standard\"\r\n                label=\"Age\"\r\n                onChange={this.handleOnChange}\r\n                name=\"role\"\r\n                value={this.state.role}\r\n              >\r\n                <MenuItem value=\"customer\" selected={true}>\r\n                  customer\r\n                </MenuItem>\r\n                <MenuItem value=\"admin\">admin</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"numberphone\">Number Phone</label>\r\n              <PhoneInput\r\n                placeholder=\"Enter phone number\"\r\n                onChange={this.handleGetNumberPhone}\r\n                value={this.state.numberphone}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={this.createNewUser}\r\n              className=\"success-btn\"\r\n            >\r\n              {this.state.id ? `Update` : `Register`}\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {this.state.isLoading ? (\r\n          `Loading Data . . . Please waiting !!! `\r\n        ) : (\r\n          <>\r\n            <div className=\"data\">\r\n              <Button\r\n                onClick={this.handleToggleForm}\r\n                style={{ marginBottom: \"20px\" }}\r\n                className=\"edit\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n              >\r\n                Add Account\r\n                <AddOutlinedIcon style={{ paddingLeft: \"10px\" }} />\r\n              </Button>\r\n              <DataGrid rows={rows} columns={columns} pageSize={4} />\r\n            </div>\r\n            <div className=\"user\">\r\n              <div className=\"hot-customer\">\r\n                <span className=\"top-customer\">TOP CUSTOMER :v</span>\r\n              </div>\r\n              <div className=\"active-customer\">\r\n                <h3>New Customer</h3>\r\n                <DataGrid\r\n                  rows={rows}\r\n                  columns={columns}\r\n                  pageSize={6}\r\n                  autoHeight\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllUser: () => {\r\n        dis\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\component\\\\Chat\\\\Chat.js\";\nimport React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport actions from \"./../../actions/userActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"./Chat.css\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      console.log(this.state.id);\n      this.setState({\n        message: e.target.value\n      });\n      this.socket.emit(\"entering_loading\", this.state.idUser);\n    };\n\n    this.handleRepMess = (id, idUser) => {\n      this.props.handleRepMess(idUser);\n      setTimeout(() => {\n        let {\n          arr\n        } = this.state;\n        let findId = this.state.arr.findIndex(e => e.id === id);\n        arr[findId].active = false;\n        this.setState({\n          id: id,\n          arr: arr,\n          username: arr[findId].username,\n          image: arr[findId].image,\n          isToggleForm: true\n        }, () => {\n          let app = document.querySelector(\".app\");\n          app.scrollTo(0, app.scrollHeight - app.clientHeight);\n        });\n      }, 300); // Lấy tin nhắn của mỗi người dùng ứng với id user\n\n      axios.get(`http://localhost:9000/chat/id?q=${idUser}`).then(res => {\n        let data = res.data.result;\n        this.setState({\n          messBuyId: data,\n          idUser: idUser,\n          id: id\n        });\n      }).catch(e => console.log(e)); // Khi lắng nghe được sự kiện thì lập tức phản hồi với on socket\n\n      this.socket.on(\"message_hi\", message => {\n        setTimeout(() => {\n          axios.get(`http://localhost:9000/chat/id?q=${this.state.idUser}`).then(res => {\n            let data = res.data.result;\n            this.setState({\n              messBuyId: data\n            }, () => {\n              let app = document.querySelector(\".app\");\n              app.scrollTo(0, app.scrollHeight);\n            });\n          });\n        }, 200);\n      });\n    };\n\n    this.handleOnClick = e => {\n      e.preventDefault();\n      let {\n        message,\n        idUser,\n        arr,\n        id\n      } = this.state; // DISPLAY 1 THÔNG TIN TỚI NGƯỜI DÙNG\n\n      this.socket.emit(\"send_mess\", {\n        message: message,\n        idUser: +idUser,\n        username: \"admin\",\n        email: \"admin123@gmail.com\",\n        image: \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\"\n      }); // LƯU MESS NÀY VÀO DATABASE\n\n      axios.post(`http://localhost:9000/chat`, {\n        message: message,\n        idUser: idUser,\n        username: \"admin\",\n        email: \"admin123@gmail.com\",\n        image: \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\"\n      }).then(res => {\n        setTimeout(() => {\n          axios.get(`http://localhost:9000/chat/id?q=${idUser}`).then(res => {\n            let data = res.data.result;\n            this.props.getAllMess();\n            setTimeout(() => {\n              let findId = arr.findIndex(e => e.idUser === idUser);\n              arr[findId].message = data[data.length - 1].message;\n              arr[findId].active = false;\n              arr[findId].usernameAdmin = \"admin\";\n              this.setState({\n                arr: arr\n              });\n            }, 300);\n            this.setState({\n              messBuyId: data,\n              message: \"\",\n              arr: arr\n            }, () => {\n              let app = document.querySelector(\".app\");\n              app.scrollTo(0, app.scrollHeight - app.clientHeight);\n            });\n          });\n        }, 100);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleOnCloseForm = () => {\n      this.setState({\n        isToggleForm: false\n      });\n    };\n\n    this.handleOnFocus = e => {\n      let {\n        arr,\n        idUser,\n        id\n      } = this.state;\n      let findId = arr.findIndex(e => e.idUser === idUser);\n      arr[findId].active = false;\n      this.setState({\n        arr: arr\n      });\n      console.log(id);\n    };\n\n    this.handleSearch = e => {\n      let value = e.target.value;\n      let {\n        arr\n      } = this.state;\n\n      if (value.length > 1) {\n        console.log(arr);\n        let findArr = this.state.newArr.filter(e => e.username.toLowerCase().includes(value));\n        this.setState({\n          arr: findArr\n        });\n      } else {\n        this.setState({\n          arr: this.state.newArr\n        });\n      }\n    };\n\n    this.state = {\n      message: \"\",\n      arr: [],\n      isSeen: true,\n      idUser: 0,\n      id: 0,\n      message: \"\",\n      username: \"\",\n      image: \"\",\n      messBuyId: [],\n      newArr: [],\n      isToggleForm: false,\n      isEntering: false\n    };\n    this.socket = io(`localhost:9000/`, {\n      transports: [\"websocket\", \"polling\", \"flashsocket\"]\n    });\n  }\n\n  componentDidMount() {\n    this.props.getAllUser();\n    this.props.getAllMess();\n    let idUser = [];\n    this.props.listUser.forEach(element => {\n      idUser.push(element.id);\n    });\n    idUser.forEach(element => {\n      this.socket.emit(\"join_rom\", element);\n    });\n    let arrObj = [];\n    setTimeout(() => {\n      this.props.chat.forEach((el, i) => {\n        if (el.username !== \"admin\") {\n          let result = arrObj.findIndex(e => e.email === el.email);\n\n          if (result === -1) {\n            arrObj.push(el);\n          } else {\n            arrObj[result].email = el.email;\n            arrObj[result].message = el.message;\n            arrObj[result].username = el.username;\n            arrObj[result].image = el.image;\n            arrObj[result].active = el.active;\n          }\n        }\n      });\n      this.setState({\n        arr: arrObj,\n        newArr: arrObj\n      });\n    }, 300);\n    this.socket.on(\"message_hi\", message => {\n      let {\n        arr\n      } = this.state;\n      let findIndex = arr.findIndex(e => e.email === message.email);\n\n      if (findIndex === -1) {\n        arr.push(message);\n      } else {\n        arr[findIndex].username = message.username;\n        arr[findIndex].message = message.message;\n        arr[findIndex].image = message.image;\n        arr[findIndex].active = true;\n      }\n\n      this.setState({\n        arr: arr,\n        isEntering: false\n      });\n    });\n    let {\n      arr\n    } = this.state;\n    setTimeout(() => {\n      arrObj.forEach(e => {\n        axios.get(`http://localhost:9000/chat/id?q=${e.idUser}`).then(res => {\n          let data = res.data.result;\n          e.message = data[data.length - 1].message;\n          arr.push(e);\n          return arr;\n        }).then(data => {\n          this.setState({\n            arr: data\n          });\n        });\n      });\n    }, 700);\n    this.socket.on(\"naylacaikhacdm\", message => {\n      this.setState({\n        isEntering: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contasiner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MESSENGER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-mess\",\n          children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: \"search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleSearch,\n            placeholder: \"Search . . .\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), this.state.arr.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.handleRepMess(e.id, e.idUser),\n            className: \"mess\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avt\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content-mess\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"username\",\n                  children: e.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: e.active ? `message isActive` : `message`,\n                  children: e.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: e.active ? `seen` : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), this.state.isToggleForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat__realtime\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: this.state.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `name ${this.state.username}`,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: this.state.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"close-icon\",\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                onClick: this.handleOnCloseForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-mess\",\n            children: [this.state.messBuyId.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"all__mess\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"all__mess-img\",\n                  children: e.username !== \"admin\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: e.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `mess__detail ${e.username}`,\n                  children: [e.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 37\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this);\n            }), this.state.isEntering && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ityping\",\n              children: `${this.state.username}  is entering . . .`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input__message\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"input\",\n              id: \"standard-basic\",\n              label: \"Message . . .\",\n              variant: \"standard\",\n              size: \"small\",\n              name: \"address\",\n              onChange: this.handleOnChange,\n              value: this.state.message,\n              autoComplete: \"off\",\n              onFocus: this.handleOnFocus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"bottom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              onClick: this.handleOnClick,\n              children: \"SEND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listUser: state.listUser,\n    chat: state.chat\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUser: () => {\n      dispatch(actions.getAllUser());\n    },\n    getAllMess: () => {\n      dispatch(actions.getAllMess());\n    },\n    handleRepMess: id => {\n      dispatch(actions.handleRepMess(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/component/Chat/Chat.js"],"names":["React","Component","Button","TextField","connect","io","actions","CloseIcon","SearchIcon","axios","Chat","constructor","props","handleOnChange","e","console","log","state","id","setState","message","target","value","socket","emit","idUser","handleRepMess","setTimeout","arr","findId","findIndex","active","username","image","isToggleForm","app","document","querySelector","scrollTo","scrollHeight","clientHeight","get","then","res","data","result","messBuyId","catch","on","handleOnClick","preventDefault","email","post","getAllMess","length","usernameAdmin","err","handleOnCloseForm","handleOnFocus","handleSearch","findArr","newArr","filter","toLowerCase","includes","isSeen","isEntering","transports","componentDidMount","getAllUser","listUser","forEach","element","push","arrObj","chat","el","i","render","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport actions from \"./../../actions/userActions\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport \"./Chat.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport axios from \"axios\";\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      arr: [],\r\n      isSeen: true,\r\n      idUser: 0,\r\n      id: 0,\r\n      message: \"\",\r\n      username: \"\",\r\n      image: \"\",\r\n      messBuyId: [],\r\n      newArr: [],\r\n      isToggleForm: false,\r\n      isEntering: false,\r\n    };\r\n    this.socket = io(`localhost:9000/`, {\r\n      transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllUser();\r\n    this.props.getAllMess();\r\n    let idUser = [];\r\n    this.props.listUser.forEach((element) => {\r\n      idUser.push(element.id);\r\n    });\r\n    idUser.forEach((element) => {\r\n      this.socket.emit(\"join_rom\", element);\r\n    });\r\n    let arrObj = [];\r\n    setTimeout(() => {\r\n      this.props.chat.forEach((el, i) => {\r\n        if (el.username !== \"admin\") {\r\n          let result = arrObj.findIndex((e) => e.email === el.email);\r\n          if (result === -1) {\r\n            arrObj.push(el);\r\n          } else {\r\n            arrObj[result].email = el.email;\r\n            arrObj[result].message = el.message;\r\n            arrObj[result].username = el.username;\r\n            arrObj[result].image = el.image;\r\n            arrObj[result].active = el.active;\r\n          }\r\n        }\r\n      });\r\n      this.setState({\r\n        arr: arrObj,\r\n        newArr: arrObj,\r\n      });\r\n    }, 300);\r\n\r\n    this.socket.on(\"message_hi\", (message) => {\r\n      let { arr } = this.state;\r\n      let findIndex = arr.findIndex((e) => e.email === message.email);\r\n      if (findIndex === -1) {\r\n        arr.push(message);\r\n      } else {\r\n        arr[findIndex].username = message.username;\r\n        arr[findIndex].message = message.message;\r\n        arr[findIndex].image = message.image;\r\n        arr[findIndex].active = true;\r\n      }\r\n      this.setState({\r\n        arr: arr,\r\n        isEntering: false,\r\n      });\r\n    });\r\n    let { arr } = this.state;\r\n    setTimeout(() => {\r\n      arrObj.forEach((e) => {\r\n        axios\r\n          .get(`http://localhost:9000/chat/id?q=${e.idUser}`)\r\n          .then((res) => {\r\n            let data = res.data.result;\r\n            e.message = data[data.length - 1].message;\r\n            arr.push(e);\r\n            return arr;\r\n          })\r\n          .then((data) => {\r\n            this.setState({\r\n              arr: data,\r\n            });\r\n          });\r\n      });\r\n    }, 700);\r\n    this.socket.on(\"naylacaikhacdm\", (message) => {\r\n      this.setState({\r\n        isEntering: true,\r\n      });\r\n    });\r\n  }\r\n  handleOnChange = (e) => {\r\n    console.log(this.state.id);\r\n\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n    this.socket.emit(\"entering_loading\", this.state.idUser);\r\n  };\r\n  // SEEN TIN NHẮN MỖI KHI CLICK VÀO\r\n  handleRepMess = (id, idUser) => {\r\n    this.props.handleRepMess(idUser);\r\n    setTimeout(() => {\r\n      let { arr } = this.state;\r\n      let findId = this.state.arr.findIndex((e) => e.id === id);\r\n      arr[findId].active = false;\r\n      this.setState(\r\n        {\r\n          id: id,\r\n          arr: arr,\r\n          username: arr[findId].username,\r\n          image: arr[findId].image,\r\n          isToggleForm: true,\r\n        },\r\n        () => {\r\n          let app = document.querySelector(\".app\");\r\n          app.scrollTo(0, app.scrollHeight - app.clientHeight);\r\n        }\r\n      );\r\n    }, 300);\r\n    // Lấy tin nhắn của mỗi người dùng ứng với id user\r\n    axios\r\n      .get(`http://localhost:9000/chat/id?q=${idUser}`)\r\n      .then((res) => {\r\n        let data = res.data.result;\r\n        this.setState({\r\n          messBuyId: data,\r\n          idUser: idUser,\r\n          id: id,\r\n        });\r\n      })\r\n      .catch((e) => console.log(e));\r\n    // Khi lắng nghe được sự kiện thì lập tức phản hồi với on socket\r\n    this.socket.on(\"message_hi\", (message) => {\r\n      setTimeout(() => {\r\n        axios\r\n          .get(`http://localhost:9000/chat/id?q=${this.state.idUser}`)\r\n          .then((res) => {\r\n            let data = res.data.result;\r\n            this.setState(\r\n              {\r\n                messBuyId: data,\r\n              },\r\n              () => {\r\n                let app = document.querySelector(\".app\");\r\n                app.scrollTo(0, app.scrollHeight);\r\n              }\r\n            );\r\n          });\r\n      }, 200);\r\n    });\r\n  };\r\n  // MỞ RA 1 TAB MỚI ĐỂ CHÁT\r\n  handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    let { message, idUser, arr, id } = this.state;\r\n    // DISPLAY 1 THÔNG TIN TỚI NGƯỜI DÙNG\r\n    this.socket.emit(\"send_mess\", {\r\n      message: message,\r\n      idUser: +idUser,\r\n      username: \"admin\",\r\n      email: \"admin123@gmail.com\",\r\n      image:\r\n        \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\",\r\n    });\r\n    // LƯU MESS NÀY VÀO DATABASE\r\n    axios\r\n      .post(`http://localhost:9000/chat`, {\r\n        message: message,\r\n        idUser: idUser,\r\n        username: \"admin\",\r\n        email: \"admin123@gmail.com\",\r\n        image:\r\n          \"https://res.cloudinary.com/artimate/image/upload/v1636128070/dxj8ut8elprbqguoxblh.jpg\",\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          axios.get(`http://localhost:9000/chat/id?q=${idUser}`).then((res) => {\r\n            let data = res.data.result;\r\n            this.props.getAllMess();\r\n            setTimeout(() => {\r\n              let findId = arr.findIndex((e) => e.idUser === idUser);\r\n              arr[findId].message = data[data.length - 1].message;\r\n              arr[findId].active = false;\r\n              arr[findId].usernameAdmin = \"admin\";\r\n              this.setState({\r\n                arr: arr,\r\n              });\r\n            }, 300);\r\n            this.setState(\r\n              {\r\n                messBuyId: data,\r\n                message: \"\",\r\n                arr: arr,\r\n              },\r\n              () => {\r\n                let app = document.querySelector(\".app\");\r\n                app.scrollTo(0, app.scrollHeight - app.clientHeight);\r\n              }\r\n            );\r\n          });\r\n        }, 100);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  handleOnCloseForm = () => {\r\n    this.setState({\r\n      isToggleForm: false,\r\n    });\r\n  };\r\n  handleOnFocus = (e) => {\r\n    let { arr, idUser, id } = this.state;\r\n    let findId = arr.findIndex((e) => e.idUser === idUser);\r\n    arr[findId].active = false;\r\n    this.setState({\r\n      arr: arr,\r\n    });\r\n    console.log(id);\r\n  };\r\n  handleSearch = (e) => {\r\n    let value = e.target.value;\r\n    let { arr } = this.state;\r\n    if (value.length > 1) {\r\n      console.log(arr);\r\n      let findArr = this.state.newArr.filter((e) =>\r\n        e.username.toLowerCase().includes(value)\r\n      );\r\n      this.setState({\r\n        arr: findArr,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        arr: this.state.newArr,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"contasiner\">\r\n        <div className=\"form__chat\">\r\n          <h1>MESSENGER</h1>\r\n          <div className=\"input-mess\">\r\n            <SearchIcon className=\"search-icon\" />\r\n            <input onChange={this.handleSearch} placeholder=\"Search . . .\" />\r\n          </div>\r\n\r\n          {this.state.arr.map((e) => {\r\n            return (\r\n              <div\r\n                onClick={() => this.handleRepMess(e.id, e.idUser)}\r\n                className=\"mess\"\r\n              >\r\n                <div className=\"avt\">\r\n                  <img src={e.image} />\r\n                </div>\r\n                <div className=\"content\">\r\n                  <div className=\"content-mess\">\r\n                    <h3 className=\"username\">{e.username}</h3>\r\n                    <span className={e.active ? `message isActive` : `message`}>\r\n                      {e.message}\r\n                    </span>\r\n                  </div>\r\n                  <div className={e.active ? `seen` : \"\"}></div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        {this.state.isToggleForm && (\r\n          <div className=\"data\">\r\n            <div className=\"app\">\r\n              <div className=\"chat__realtime\">\r\n                <div className=\"info\">\r\n                  <div className=\"img\">\r\n                    <img src={this.state.image} />\r\n                  </div>\r\n                  <div className={`name ${this.state.username}`}>\r\n                    <h3>{this.state.username}</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"close-icon\">\r\n                  <CloseIcon onClick={this.handleOnCloseForm} />\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-mess\">\r\n                {this.state.messBuyId.map((e) => {\r\n                  return (\r\n                    <div className=\"all__mess\">\r\n                      <div className=\"all__mess-img\">\r\n                        {e.username !== \"admin\" && <img src={e.image} />}\r\n                      </div>\r\n                      <span className={`mess__detail ${e.username}`}>\r\n                        {e.message} <br />{\" \"}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n                {this.state.isEntering && (\r\n                  <span className=\"ityping\">{`${this.state.username}  is entering . . .`}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input__message\">\r\n                <TextField\r\n                  className=\"input\"\r\n                  id=\"standard-basic\"\r\n                  label=\"Message . . .\"\r\n                  variant=\"standard\"\r\n                  size=\"small\"\r\n                  name=\"address\"\r\n                  onChange={this.handleOnChange}\r\n                  value={this.state.message}\r\n                  autoComplete=\"off\"\r\n                  onFocus={this.handleOnFocus}\r\n                />\r\n                <div>\r\n                  <span class=\"bottom\"></span>\r\n                  <span class=\"right\"></span>\r\n                  <span class=\"top\"></span>\r\n                  <span class=\"left\"></span>\r\n                </div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  onClick={this.handleOnClick}\r\n                >\r\n                  SEND\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { listUser: state.listUser, chat: state.chat };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllUser: () => {\r\n      dispatch(actions.getAllUser());\r\n    },\r\n    getAllMess: () => {\r\n      dispatch(actions.getAllMess());\r\n    },\r\n    handleRepMess: (id) => {\r\n      dispatch(actions.handleRepMess(id));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}
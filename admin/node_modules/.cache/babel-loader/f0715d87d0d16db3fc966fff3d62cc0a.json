{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnFullstack\\\\admin\\\\src\\\\containers\\\\QuanLyPhanHoiContainer.js\";\nimport React, { Component } from \"react\";\nimport QuanLyPhanHoi from \"../component/QuanLyPhanHoi/QuanLyPhanHoi\";\nimport { connect } from \"react-redux\";\nimport actions from \"./../actions/getAllFeedback\";\nimport actionsUser from \"./../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass QuanLyPhanHoiContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = obj => {\n      this.props.sendMessage(obj);\n    };\n\n    this.deleteFeedback = id => {\n      this.props.deleteFeedback(id);\n      setTimeout(() => {\n        this.props.getAllFeedback();\n      }, 300);\n    };\n\n    this.state = {\n      arrFb: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllFeedback();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.fb !== this.props.fb) {\n      this.setState({\n        arrFb: this.props.fb\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(QuanLyPhanHoi, {\n        fb: this.state.arrFb,\n        sendMessage: this.sendMessage,\n        messAll: this.props.messAll,\n        deleteFeedback: this.deleteFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fb: state.fb,\n    messAll: state.messAll\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllFeedback: () => {\n      dispatch(actions.getAllFeedback());\n    },\n    sendMessage: obj => {\n      dispatch(actions.sendMessage(obj));\n    },\n    addLoading: () => {\n      dispatch(actionsUser.addLoading());\n    },\n    removeLoading: () => {\n      dispatch(actionsUser.removeLoading());\n    },\n    deleteFeedback: id => {\n      dispatch(actions.deleteFeedback(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuanLyPhanHoiContainer);","map":{"version":3,"sources":["D:/LearnFullstack/admin/src/containers/QuanLyPhanHoiContainer.js"],"names":["React","Component","QuanLyPhanHoi","connect","actions","actionsUser","QuanLyPhanHoiContainer","constructor","props","sendMessage","obj","deleteFeedback","id","setTimeout","getAllFeedback","state","arrFb","componentDidMount","componentDidUpdate","prevProps","fb","setState","render","messAll","mapStateToProps","mapDispatchToProps","dispatch","addLoading","removeLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AACA,MAAMC,sBAAN,SAAqCL,SAArC,CAA+C;AAC7CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,WAhBmB,GAgBJC,GAAD,IAAS;AACrB,WAAKF,KAAL,CAAWC,WAAX,CAAuBC,GAAvB;AACD,KAlBkB;;AAAA,SAmBnBC,cAnBmB,GAmBDC,EAAD,IAAQ;AACvB,WAAKJ,KAAL,CAAWG,cAAX,CAA0BC,EAA1B;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKL,KAAL,CAAWM,cAAX;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAxBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,KAAL,CAAWM,cAAX;AACD;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,EAAV,KAAiB,KAAKZ,KAAL,CAAWY,EAAhC,EAAoC;AAClC,WAAKC,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWY;AADN,OAAd;AAGD;AACF;;AAUDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,KADjB;AAEE,QAAA,WAAW,EAAE,KAAKP,WAFpB;AAGE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWe,OAHtB;AAIE,QAAA,cAAc,EAAE,KAAKZ;AAJvB;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAUD;;AArC4C;;AAuC/C,MAAMa,eAAe,GAAIT,KAAD,IAAW;AACjC,SAAO;AACLK,IAAAA,EAAE,EAAEL,KAAK,CAACK,EADL;AAELG,IAAAA,OAAO,EAAER,KAAK,CAACQ;AAFV,GAAP;AAID,CALD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLZ,IAAAA,cAAc,EAAE,MAAM;AACpBY,MAAAA,QAAQ,CAACtB,OAAO,CAACU,cAAR,EAAD,CAAR;AACD,KAHI;AAILL,IAAAA,WAAW,EAAGC,GAAD,IAAS;AACpBgB,MAAAA,QAAQ,CAACtB,OAAO,CAACK,WAAR,CAAoBC,GAApB,CAAD,CAAR;AACD,KANI;AAOLiB,IAAAA,UAAU,EAAE,MAAM;AAChBD,MAAAA,QAAQ,CAACrB,WAAW,CAACsB,UAAZ,EAAD,CAAR;AACD,KATI;AAULC,IAAAA,aAAa,EAAE,MAAM;AACnBF,MAAAA,QAAQ,CAACrB,WAAW,CAACuB,aAAZ,EAAD,CAAR;AACD,KAZI;AAaLjB,IAAAA,cAAc,EAAGC,EAAD,IAAQ;AACtBc,MAAAA,QAAQ,CAACtB,OAAO,CAACO,cAAR,CAAuBC,EAAvB,CAAD,CAAR;AACD;AAfI,GAAP;AAiBD,CAlBD;;AAmBA,eAAeT,OAAO,CACpBqB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbnB,sBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport QuanLyPhanHoi from \"../component/QuanLyPhanHoi/QuanLyPhanHoi\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"./../actions/getAllFeedback\";\r\nimport actionsUser from \"./../actions/userActions\";\r\nclass QuanLyPhanHoiContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrFb: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllFeedback();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.fb !== this.props.fb) {\r\n      this.setState({\r\n        arrFb: this.props.fb,\r\n      });\r\n    }\r\n  }\r\n  sendMessage = (obj) => {\r\n    this.props.sendMessage(obj);\r\n  };\r\n  deleteFeedback = (id) => {\r\n    this.props.deleteFeedback(id);\r\n    setTimeout(() => {\r\n      this.props.getAllFeedback();\r\n    }, 300);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <QuanLyPhanHoi\r\n          fb={this.state.arrFb}\r\n          sendMessage={this.sendMessage}\r\n          messAll={this.props.messAll}\r\n          deleteFeedback={this.deleteFeedback}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fb: state.fb,\r\n    messAll: state.messAll,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllFeedback: () => {\r\n      dispatch(actions.getAllFeedback());\r\n    },\r\n    sendMessage: (obj) => {\r\n      dispatch(actions.sendMessage(obj));\r\n    },\r\n    addLoading: () => {\r\n      dispatch(actionsUser.addLoading());\r\n    },\r\n    removeLoading: () => {\r\n      dispatch(actionsUser.removeLoading());\r\n    },\r\n    deleteFeedback: (id) => {\r\n      dispatch(actions.deleteFeedback(id));\r\n    },\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuanLyPhanHoiContainer);\r\n"]},"metadata":{},"sourceType":"module"}